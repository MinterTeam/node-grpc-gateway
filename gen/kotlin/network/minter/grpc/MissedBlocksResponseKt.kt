//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: resources.proto

package network.minter.grpc;

@kotlin.jvm.JvmSynthetic
inline fun missedBlocksResponse(block: network.minter.grpc.MissedBlocksResponseKt.Dsl.() -> Unit): network.minter.grpc.MissedBlocksResponse =
  network.minter.grpc.MissedBlocksResponseKt.Dsl._create(network.minter.grpc.MissedBlocksResponse.newBuilder()).apply { block() }._build()
object MissedBlocksResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: network.minter.grpc.MissedBlocksResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: network.minter.grpc.MissedBlocksResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): network.minter.grpc.MissedBlocksResponse = _builder.build()

    /**
     * <code>string missed_blocks = 1 [json_name = "missedBlocks"];</code>
     */
    var missedBlocks: kotlin.String
      @JvmName("getMissedBlocks")
      get() = _builder.getMissedBlocks()
      @JvmName("setMissedBlocks")
      set(value) {
        _builder.setMissedBlocks(value)
      }
    /**
     * <code>string missed_blocks = 1 [json_name = "missedBlocks"];</code>
     */
    fun clearMissedBlocks() {
      _builder.clearMissedBlocks()
    }

    /**
     * <code>int64 missed_blocks_count = 2 [json_name = "missedBlocksCount"];</code>
     */
    var missedBlocksCount: kotlin.Long
      @JvmName("getMissedBlocksCount")
      get() = _builder.getMissedBlocksCount()
      @JvmName("setMissedBlocksCount")
      set(value) {
        _builder.setMissedBlocksCount(value)
      }
    /**
     * <code>int64 missed_blocks_count = 2 [json_name = "missedBlocksCount"];</code>
     */
    fun clearMissedBlocksCount() {
      _builder.clearMissedBlocksCount()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun network.minter.grpc.MissedBlocksResponse.copy(block: network.minter.grpc.MissedBlocksResponseKt.Dsl.() -> Unit): network.minter.grpc.MissedBlocksResponse =
  network.minter.grpc.MissedBlocksResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
