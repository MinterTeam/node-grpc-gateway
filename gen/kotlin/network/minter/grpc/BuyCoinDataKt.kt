//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: data.proto

package network.minter.grpc;

@kotlin.jvm.JvmSynthetic
inline fun buyCoinData(block: network.minter.grpc.BuyCoinDataKt.Dsl.() -> Unit): network.minter.grpc.BuyCoinData =
  network.minter.grpc.BuyCoinDataKt.Dsl._create(network.minter.grpc.BuyCoinData.newBuilder()).apply { block() }._build()
object BuyCoinDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: network.minter.grpc.BuyCoinData.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: network.minter.grpc.BuyCoinData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): network.minter.grpc.BuyCoinData = _builder.build()

    /**
     * <code>.api_pb.Coin coin_to_buy = 1 [json_name = "coinToBuy"];</code>
     */
    var coinToBuy: network.minter.grpc.Coin
      @JvmName("getCoinToBuy")
      get() = _builder.getCoinToBuy()
      @JvmName("setCoinToBuy")
      set(value) {
        _builder.setCoinToBuy(value)
      }
    /**
     * <code>.api_pb.Coin coin_to_buy = 1 [json_name = "coinToBuy"];</code>
     */
    fun clearCoinToBuy() {
      _builder.clearCoinToBuy()
    }
    /**
     * <code>.api_pb.Coin coin_to_buy = 1 [json_name = "coinToBuy"];</code>
     * @return Whether the coinToBuy field is set.
     */
    fun hasCoinToBuy(): kotlin.Boolean {
      return _builder.hasCoinToBuy()
    }

    /**
     * <code>string value_to_buy = 2 [json_name = "valueToBuy"];</code>
     */
    var valueToBuy: kotlin.String
      @JvmName("getValueToBuy")
      get() = _builder.getValueToBuy()
      @JvmName("setValueToBuy")
      set(value) {
        _builder.setValueToBuy(value)
      }
    /**
     * <code>string value_to_buy = 2 [json_name = "valueToBuy"];</code>
     */
    fun clearValueToBuy() {
      _builder.clearValueToBuy()
    }

    /**
     * <code>.api_pb.Coin coin_to_sell = 3 [json_name = "coinToSell"];</code>
     */
    var coinToSell: network.minter.grpc.Coin
      @JvmName("getCoinToSell")
      get() = _builder.getCoinToSell()
      @JvmName("setCoinToSell")
      set(value) {
        _builder.setCoinToSell(value)
      }
    /**
     * <code>.api_pb.Coin coin_to_sell = 3 [json_name = "coinToSell"];</code>
     */
    fun clearCoinToSell() {
      _builder.clearCoinToSell()
    }
    /**
     * <code>.api_pb.Coin coin_to_sell = 3 [json_name = "coinToSell"];</code>
     * @return Whether the coinToSell field is set.
     */
    fun hasCoinToSell(): kotlin.Boolean {
      return _builder.hasCoinToSell()
    }

    /**
     * <code>string maximum_value_to_sell = 4 [json_name = "maximumValueToSell"];</code>
     */
    var maximumValueToSell: kotlin.String
      @JvmName("getMaximumValueToSell")
      get() = _builder.getMaximumValueToSell()
      @JvmName("setMaximumValueToSell")
      set(value) {
        _builder.setMaximumValueToSell(value)
      }
    /**
     * <code>string maximum_value_to_sell = 4 [json_name = "maximumValueToSell"];</code>
     */
    fun clearMaximumValueToSell() {
      _builder.clearMaximumValueToSell()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun network.minter.grpc.BuyCoinData.copy(block: network.minter.grpc.BuyCoinDataKt.Dsl.() -> Unit): network.minter.grpc.BuyCoinData =
  network.minter.grpc.BuyCoinDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()
