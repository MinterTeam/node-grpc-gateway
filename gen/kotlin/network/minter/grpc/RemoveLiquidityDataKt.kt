//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: data.proto

package network.minter.grpc;

@kotlin.jvm.JvmSynthetic
inline fun removeLiquidityData(block: network.minter.grpc.RemoveLiquidityDataKt.Dsl.() -> Unit): network.minter.grpc.RemoveLiquidityData =
  network.minter.grpc.RemoveLiquidityDataKt.Dsl._create(network.minter.grpc.RemoveLiquidityData.newBuilder()).apply { block() }._build()
object RemoveLiquidityDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: network.minter.grpc.RemoveLiquidityData.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: network.minter.grpc.RemoveLiquidityData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): network.minter.grpc.RemoveLiquidityData = _builder.build()

    /**
     * <code>.api_pb.Coin coin0 = 1 [json_name = "coin0"];</code>
     */
    var coin0: network.minter.grpc.Coin
      @JvmName("getCoin0")
      get() = _builder.getCoin0()
      @JvmName("setCoin0")
      set(value) {
        _builder.setCoin0(value)
      }
    /**
     * <code>.api_pb.Coin coin0 = 1 [json_name = "coin0"];</code>
     */
    fun clearCoin0() {
      _builder.clearCoin0()
    }
    /**
     * <code>.api_pb.Coin coin0 = 1 [json_name = "coin0"];</code>
     * @return Whether the coin0 field is set.
     */
    fun hasCoin0(): kotlin.Boolean {
      return _builder.hasCoin0()
    }

    /**
     * <code>.api_pb.Coin coin1 = 2 [json_name = "coin1"];</code>
     */
    var coin1: network.minter.grpc.Coin
      @JvmName("getCoin1")
      get() = _builder.getCoin1()
      @JvmName("setCoin1")
      set(value) {
        _builder.setCoin1(value)
      }
    /**
     * <code>.api_pb.Coin coin1 = 2 [json_name = "coin1"];</code>
     */
    fun clearCoin1() {
      _builder.clearCoin1()
    }
    /**
     * <code>.api_pb.Coin coin1 = 2 [json_name = "coin1"];</code>
     * @return Whether the coin1 field is set.
     */
    fun hasCoin1(): kotlin.Boolean {
      return _builder.hasCoin1()
    }

    /**
     * <code>string liquidity = 3 [json_name = "liquidity"];</code>
     */
    var liquidity: kotlin.String
      @JvmName("getLiquidity")
      get() = _builder.getLiquidity()
      @JvmName("setLiquidity")
      set(value) {
        _builder.setLiquidity(value)
      }
    /**
     * <code>string liquidity = 3 [json_name = "liquidity"];</code>
     */
    fun clearLiquidity() {
      _builder.clearLiquidity()
    }

    /**
     * <code>string minimum_volume0 = 4 [json_name = "minimumVolume0"];</code>
     */
    var minimumVolume0: kotlin.String
      @JvmName("getMinimumVolume0")
      get() = _builder.getMinimumVolume0()
      @JvmName("setMinimumVolume0")
      set(value) {
        _builder.setMinimumVolume0(value)
      }
    /**
     * <code>string minimum_volume0 = 4 [json_name = "minimumVolume0"];</code>
     */
    fun clearMinimumVolume0() {
      _builder.clearMinimumVolume0()
    }

    /**
     * <code>string minimum_volume1 = 5 [json_name = "minimumVolume1"];</code>
     */
    var minimumVolume1: kotlin.String
      @JvmName("getMinimumVolume1")
      get() = _builder.getMinimumVolume1()
      @JvmName("setMinimumVolume1")
      set(value) {
        _builder.setMinimumVolume1(value)
      }
    /**
     * <code>string minimum_volume1 = 5 [json_name = "minimumVolume1"];</code>
     */
    fun clearMinimumVolume1() {
      _builder.clearMinimumVolume1()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun network.minter.grpc.RemoveLiquidityData.copy(block: network.minter.grpc.RemoveLiquidityDataKt.Dsl.() -> Unit): network.minter.grpc.RemoveLiquidityData =
  network.minter.grpc.RemoveLiquidityDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()
