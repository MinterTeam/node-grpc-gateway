//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: resources.proto

package network.minter.grpc;

@kotlin.jvm.JvmSynthetic
inline fun subscribeResponse(block: network.minter.grpc.SubscribeResponseKt.Dsl.() -> Unit): network.minter.grpc.SubscribeResponse =
  network.minter.grpc.SubscribeResponseKt.Dsl._create(network.minter.grpc.SubscribeResponse.newBuilder()).apply { block() }._build()
object SubscribeResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: network.minter.grpc.SubscribeResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: network.minter.grpc.SubscribeResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): network.minter.grpc.SubscribeResponse = _builder.build()

    /**
     * <code>string query = 1 [json_name = "query"];</code>
     */
    var query: kotlin.String
      @JvmName("getQuery")
      get() = _builder.getQuery()
      @JvmName("setQuery")
      set(value) {
        _builder.setQuery(value)
      }
    /**
     * <code>string query = 1 [json_name = "query"];</code>
     */
    fun clearQuery() {
      _builder.clearQuery()
    }

    /**
     * <code>.google.protobuf.Struct data = 2 [json_name = "data"];</code>
     */
    var data: com.google.protobuf.Struct
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * <code>.google.protobuf.Struct data = 2 [json_name = "data"];</code>
     */
    fun clearData() {
      _builder.clearData()
    }
    /**
     * <code>.google.protobuf.Struct data = 2 [json_name = "data"];</code>
     * @return Whether the data field is set.
     */
    fun hasData(): kotlin.Boolean {
      return _builder.hasData()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class EventsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     */
     val events: com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEventsList()
      )
    /**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     * @param value The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEvents")
    fun com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>.add(value: network.minter.grpc.SubscribeResponse.Event) {
      _builder.addEvents(value)
    }/**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     * @param value The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEvents")
    inline operator fun com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>.plusAssign(value: network.minter.grpc.SubscribeResponse.Event) {
      add(value)
    }/**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     * @param values The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEvents")
    fun com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>.addAll(values: kotlin.collections.Iterable<network.minter.grpc.SubscribeResponse.Event>) {
      _builder.addAllEvents(values)
    }/**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     * @param values The events to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEvents")
    inline operator fun com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>.plusAssign(values: kotlin.collections.Iterable<network.minter.grpc.SubscribeResponse.Event>) {
      addAll(values)
    }/**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     * @param index The index to set the value at.
     * @param value The events to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEvents")
    operator fun com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>.set(index: kotlin.Int, value: network.minter.grpc.SubscribeResponse.Event) {
      _builder.setEvents(index, value)
    }/**
     * <code>repeated .api_pb.SubscribeResponse.Event events = 3 [json_name = "events"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEvents")
    fun com.google.protobuf.kotlin.DslList<network.minter.grpc.SubscribeResponse.Event, EventsProxy>.clear() {
      _builder.clearEvents()
    }}
  @kotlin.jvm.JvmSynthetic
  inline fun event(block: network.minter.grpc.SubscribeResponseKt.EventKt.Dsl.() -> Unit): network.minter.grpc.SubscribeResponse.Event =
    network.minter.grpc.SubscribeResponseKt.EventKt.Dsl._create(network.minter.grpc.SubscribeResponse.Event.newBuilder()).apply { block() }._build()
  object EventKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      @kotlin.jvm.JvmField private val _builder: network.minter.grpc.SubscribeResponse.Event.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: network.minter.grpc.SubscribeResponse.Event.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): network.minter.grpc.SubscribeResponse.Event = _builder.build()

      /**
       * <code>string key = 1 [json_name = "key"];</code>
       */
      var key: kotlin.String
        @JvmName("getKey")
        get() = _builder.getKey()
        @JvmName("setKey")
        set(value) {
          _builder.setKey(value)
        }
      /**
       * <code>string key = 1 [json_name = "key"];</code>
       */
      fun clearKey() {
        _builder.clearKey()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      class EventsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       * @return A list containing the events.
       */
      val events: com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>
        @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getEventsList()
        )
      /**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       * @param value The events to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addEvents")
      fun com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>.add(value: kotlin.String) {
        _builder.addEvents(value)
      }
      /**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       * @param value The events to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignEvents")
      operator fun com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>.plusAssign(value: kotlin.String) {
        _builder.addEvents(value)
      }
      /**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       * @param values The events to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllEvents")
      fun com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
        _builder.addAllEvents(values)
      }
      /**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       * @param values The events to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllEvents")
      operator fun com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
        _builder.addAllEvents(values)
      }
      /**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       * @param index The index to set the value at.
       * @param value The events to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setEvents")
      operator fun com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>.set(index: kotlin.Int, value: kotlin.String) {
        _builder.setEvents(index, value)
      }/**
       * <code>repeated string events = 2 [json_name = "events"];</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearEvents")
      fun com.google.protobuf.kotlin.DslList<kotlin.String, EventsProxy>.clear() {
        _builder.clearEvents()
      }}
  }
}
@kotlin.jvm.JvmSynthetic
inline fun network.minter.grpc.SubscribeResponse.copy(block: network.minter.grpc.SubscribeResponseKt.Dsl.() -> Unit): network.minter.grpc.SubscribeResponse =
  network.minter.grpc.SubscribeResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
@kotlin.jvm.JvmSynthetic
inline fun network.minter.grpc.SubscribeResponse.Event.copy(block: network.minter.grpc.SubscribeResponseKt.EventKt.Dsl.() -> Unit): network.minter.grpc.SubscribeResponse.Event =
  network.minter.grpc.SubscribeResponseKt.EventKt.Dsl._create(this.toBuilder()).apply { block() }._build()
