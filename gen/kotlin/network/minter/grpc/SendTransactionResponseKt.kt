//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: resources.proto

package network.minter.grpc;

@kotlin.jvm.JvmSynthetic
inline fun sendTransactionResponse(block: network.minter.grpc.SendTransactionResponseKt.Dsl.() -> Unit): network.minter.grpc.SendTransactionResponse =
  network.minter.grpc.SendTransactionResponseKt.Dsl._create(network.minter.grpc.SendTransactionResponse.newBuilder()).apply { block() }._build()
object SendTransactionResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    @kotlin.jvm.JvmField private val _builder: network.minter.grpc.SendTransactionResponse.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: network.minter.grpc.SendTransactionResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): network.minter.grpc.SendTransactionResponse = _builder.build()

    /**
     * <code>uint64 code = 1 [json_name = "code"];</code>
     */
    var code: kotlin.Long
      @JvmName("getCode")
      get() = _builder.getCode()
      @JvmName("setCode")
      set(value) {
        _builder.setCode(value)
      }
    /**
     * <code>uint64 code = 1 [json_name = "code"];</code>
     */
    fun clearCode() {
      _builder.clearCode()
    }

    /**
     * <code>string log = 3 [json_name = "log"];</code>
     */
    var log: kotlin.String
      @JvmName("getLog")
      get() = _builder.getLog()
      @JvmName("setLog")
      set(value) {
        _builder.setLog(value)
      }
    /**
     * <code>string log = 3 [json_name = "log"];</code>
     */
    fun clearLog() {
      _builder.clearLog()
    }

    /**
     * <code>string hash = 4 [json_name = "hash"];</code>
     */
    var hash: kotlin.String
      @JvmName("getHash")
      get() = _builder.getHash()
      @JvmName("setHash")
      set(value) {
        _builder.setHash(value)
      }
    /**
     * <code>string hash = 4 [json_name = "hash"];</code>
     */
    fun clearHash() {
      _builder.clearHash()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun network.minter.grpc.SendTransactionResponse.copy(block: network.minter.grpc.SendTransactionResponseKt.Dsl.() -> Unit): network.minter.grpc.SendTransactionResponse =
  network.minter.grpc.SendTransactionResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
